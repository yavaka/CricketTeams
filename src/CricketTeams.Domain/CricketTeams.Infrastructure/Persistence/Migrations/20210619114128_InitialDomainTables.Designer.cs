// <auto-generated />
using System;
using CricketTeams.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CricketTeams.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(CricketTeamsDbContext))]
    [Migration("20210619114128_InitialDomainTables")]
    partial class InitialDomainTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CricketTeams.Domain.Models.Coaches.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Matches.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FirstUmpireId")
                        .HasColumnType("int");

                    b.Property<bool>("InProgress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMatchEnded")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfInnings")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int>("OversPerInning")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("ScoreId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondUmpireId")
                        .HasColumnType("int");

                    b.Property<int?>("StadiumId")
                        .HasColumnType("int");

                    b.Property<int>("TeamAId")
                        .HasColumnType("int");

                    b.Property<int>("TeamBId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirstUmpireId");

                    b.HasIndex("ScoreId");

                    b.HasIndex("SecondUmpireId");

                    b.HasIndex("StadiumId");

                    b.HasIndex("TeamAId");

                    b.HasIndex("TeamBId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Matches.Umpire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MatchesAsMainReferee")
                        .HasColumnType("int");

                    b.Property<int>("MatchesAsSecondReferee")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Umpires");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Players.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int?>("CaptainId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("InningId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OverId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int?>("TeamPlayersId1")
                        .HasColumnType("int");

                    b.Property<int?>("TeamPlayersId2")
                        .HasColumnType("int");

                    b.Property<int?>("TeamPlayersId3")
                        .HasColumnType("int");

                    b.Property<int?>("WicketKeeperId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaptainId")
                        .IsUnique()
                        .HasFilter("[CaptainId] IS NOT NULL");

                    b.HasIndex("InningId");

                    b.HasIndex("OverId");

                    b.HasIndex("TeamPlayersId1");

                    b.HasIndex("TeamPlayersId2");

                    b.HasIndex("TeamPlayersId3");

                    b.HasIndex("WicketKeeperId")
                        .IsUnique()
                        .HasFilter("[WicketKeeperId] IS NOT NULL");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Ball", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BowlerId")
                        .HasColumnType("int");

                    b.Property<int?>("BowlingTeamPlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("DismissedBatsmanId")
                        .HasColumnType("int");

                    b.Property<bool>("Four")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBatsmanOut")
                        .HasColumnType("bit");

                    b.Property<bool>("NoBall")
                        .HasColumnType("bit");

                    b.Property<int>("NonStrikerId")
                        .HasColumnType("int");

                    b.Property<int?>("OverId")
                        .HasColumnType("int");

                    b.Property<int>("Runs")
                        .HasColumnType("int");

                    b.Property<bool>("Six")
                        .HasColumnType("bit");

                    b.Property<int>("StrikerId")
                        .HasColumnType("int");

                    b.Property<bool>("WideBall")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BowlerId");

                    b.HasIndex("BowlingTeamPlayerId");

                    b.HasIndex("DismissedBatsmanId");

                    b.HasIndex("NonStrikerId");

                    b.HasIndex("OverId");

                    b.HasIndex("StrikerId");

                    b.ToTable("Ball");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Inning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BattingTeamId")
                        .HasColumnType("int");

                    b.Property<int>("BowlingTeamId")
                        .HasColumnType("int");

                    b.Property<bool>("IsInningEnd")
                        .HasColumnType("bit");

                    b.Property<int>("OversPerInning")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int?>("ScoreId")
                        .HasColumnType("int");

                    b.Property<int>("TotalRuns")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BattingTeamId");

                    b.HasIndex("BowlingTeamId");

                    b.HasIndex("ScoreId");

                    b.ToTable("Inning");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Over", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BowlerId")
                        .HasColumnType("int");

                    b.Property<int>("ExtraBalls")
                        .HasColumnType("int");

                    b.Property<int?>("InningId")
                        .HasColumnType("int");

                    b.Property<bool>("IsOverEnd")
                        .HasColumnType("bit");

                    b.Property<int>("NonStrikerId")
                        .HasColumnType("int");

                    b.Property<int>("StrikerId")
                        .HasColumnType("int");

                    b.Property<int>("TotalRuns")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BowlerId");

                    b.HasIndex("InningId");

                    b.HasIndex("NonStrikerId");

                    b.HasIndex("StrikerId");

                    b.ToTable("Over");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsMatchEnd")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfInnings")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int>("OversPerInning")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("TeamAId")
                        .HasColumnType("int");

                    b.Property<int>("TeamBId")
                        .HasColumnType("int");

                    b.Property<int>("TossWinnerTeamId")
                        .HasColumnType("int");

                    b.Property<int>("TotalScoreTeamA")
                        .HasColumnType("int");

                    b.Property<int>("TotalScoreTeamB")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamAId");

                    b.HasIndex("TeamBId");

                    b.ToTable("ScoresFromMatches");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Stadiums.Stadium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasMaxLength(200000)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("Stadiums");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Teams.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PlayersId")
                        .HasColumnType("int");

                    b.Property<int?>("StadiumId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("PlayersId");

                    b.HasIndex("StadiumId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Teams.TeamPlayers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TwelfthId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TwelfthId");

                    b.ToTable("TeamPlayers");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Coaches.Coach", b =>
                {
                    b.OwnsOne("CricketTeams.Domain.Models.Players.BattingStyle", "BattingStyle", b1 =>
                        {
                            b1.Property<int>("CoachId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("CoachId");

                            b1.ToTable("Coaches");

                            b1.WithOwner()
                                .HasForeignKey("CoachId");
                        });

                    b.OwnsOne("CricketTeams.Domain.Models.Players.BowlingStyle", "BowlingStyle", b1 =>
                        {
                            b1.Property<int>("CoachId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.Property<string>("StyleName")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("CoachId");

                            b1.ToTable("Coaches");

                            b1.WithOwner()
                                .HasForeignKey("CoachId");

                            b1.OwnsOne("CricketTeams.Domain.Models.Players.BowlingTypes", "BowlingType", b2 =>
                                {
                                    b2.Property<int>("BowlingStyleCoachId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<int>("Value")
                                        .HasColumnType("int");

                                    b2.HasKey("BowlingStyleCoachId");

                                    b2.ToTable("Coaches");

                                    b2.WithOwner()
                                        .HasForeignKey("BowlingStyleCoachId");
                                });

                            b1.Navigation("BowlingType")
                                .IsRequired();
                        });

                    b.Navigation("BattingStyle");

                    b.Navigation("BowlingStyle");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Matches.Match", b =>
                {
                    b.HasOne("CricketTeams.Domain.Models.Matches.Umpire", "FirstUmpire")
                        .WithMany()
                        .HasForeignKey("FirstUmpireId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CricketTeams.Domain.Models.Scores.Score", "Score")
                        .WithMany()
                        .HasForeignKey("ScoreId");

                    b.HasOne("CricketTeams.Domain.Models.Matches.Umpire", "SecondUmpire")
                        .WithMany()
                        .HasForeignKey("SecondUmpireId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CricketTeams.Domain.Models.Stadiums.Stadium", "Stadium")
                        .WithMany()
                        .HasForeignKey("StadiumId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CricketTeams.Domain.Models.Teams.Team", "TeamA")
                        .WithMany()
                        .HasForeignKey("TeamAId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CricketTeams.Domain.Models.Teams.Team", "TeamB")
                        .WithMany()
                        .HasForeignKey("TeamBId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("CricketTeams.Domain.Models.Matches.Statistic", "Statistic", b1 =>
                        {
                            b1.Property<int>("MatchId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("Date")
                                .HasColumnType("datetime2");

                            b1.Property<int>("LosingTeamId")
                                .HasColumnType("int");

                            b1.Property<int>("LosingTeamTotalRuns")
                                .HasColumnType("int");

                            b1.Property<int>("ManOfTheMatchId")
                                .HasColumnType("int");

                            b1.Property<int>("TossWinnerTeamId")
                                .HasColumnType("int");

                            b1.Property<int>("WinningTeamId")
                                .HasColumnType("int");

                            b1.Property<int>("WinningTeamTotalRuns")
                                .HasColumnType("int");

                            b1.HasKey("MatchId");

                            b1.ToTable("Matches");

                            b1.WithOwner()
                                .HasForeignKey("MatchId");

                            b1.OwnsOne("CricketTeams.Domain.Models.Matches.TossDecisions", "TossDecision", b2 =>
                                {
                                    b2.Property<int>("StatisticMatchId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<int>("Value")
                                        .HasColumnType("int");

                                    b2.HasKey("StatisticMatchId");

                                    b2.ToTable("Matches");

                                    b2.WithOwner()
                                        .HasForeignKey("StatisticMatchId");
                                });

                            b1.Navigation("TossDecision")
                                .IsRequired();
                        });

                    b.Navigation("FirstUmpire");

                    b.Navigation("Score");

                    b.Navigation("SecondUmpire");

                    b.Navigation("Stadium");

                    b.Navigation("Statistic");

                    b.Navigation("TeamA");

                    b.Navigation("TeamB");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Players.Player", b =>
                {
                    b.HasOne("CricketTeams.Domain.Models.Teams.TeamPlayers", null)
                        .WithOne("Captain")
                        .HasForeignKey("CricketTeams.Domain.Models.Players.Player", "CaptainId")
                        .HasConstraintName("FK_CaptainId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CricketTeams.Domain.Models.Scores.Inning", null)
                        .WithMany("BatsmenOut")
                        .HasForeignKey("InningId");

                    b.HasOne("CricketTeams.Domain.Models.Scores.Over", null)
                        .WithMany("BatsmenOut")
                        .HasForeignKey("OverId");

                    b.HasOne("CricketTeams.Domain.Models.Teams.TeamPlayers", null)
                        .WithMany("AllRounders")
                        .HasForeignKey("TeamPlayersId1");

                    b.HasOne("CricketTeams.Domain.Models.Teams.TeamPlayers", null)
                        .WithMany("Batsmen")
                        .HasForeignKey("TeamPlayersId2");

                    b.HasOne("CricketTeams.Domain.Models.Teams.TeamPlayers", null)
                        .WithMany("Bowlers")
                        .HasForeignKey("TeamPlayersId3");

                    b.HasOne("CricketTeams.Domain.Models.Teams.TeamPlayers", null)
                        .WithOne("WicketKeeper")
                        .HasForeignKey("CricketTeams.Domain.Models.Players.Player", "WicketKeeperId")
                        .HasConstraintName("FK_WicketKeeperId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("CricketTeams.Domain.Models.History", "History", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");

                            b1.OwnsMany("CricketTeams.Domain.Models.Players.MatchStat.MatchStat", "Matches", b2 =>
                                {
                                    b2.Property<int>("HistoryPlayerId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<int>("MatchId")
                                        .HasColumnType("int");

                                    b2.HasKey("HistoryPlayerId", "Id");

                                    b2.ToTable("MatchStat");

                                    b2.WithOwner()
                                        .HasForeignKey("HistoryPlayerId");

                                    b2.OwnsOne("CricketTeams.Domain.Models.Players.MatchStat.MatchBatsman", "Batsman", b3 =>
                                        {
                                            b3.Property<int>("MatchStatHistoryPlayerId")
                                                .HasColumnType("int");

                                            b3.Property<int>("MatchStatId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<int?>("FielderId")
                                                .HasColumnType("int");

                                            b3.Property<bool>("IsPlayerOut")
                                                .HasColumnType("bit");

                                            b3.Property<int>("NumberOfFour")
                                                .HasColumnType("int");

                                            b3.Property<int>("NumberOfSix")
                                                .HasColumnType("int");

                                            b3.Property<int>("TotalRuns")
                                                .HasColumnType("int");

                                            b3.HasKey("MatchStatHistoryPlayerId", "MatchStatId");

                                            b3.HasIndex("FielderId");

                                            b3.ToTable("MatchStat");

                                            b3.HasOne("CricketTeams.Domain.Models.Players.Player", "Fielder")
                                                .WithMany()
                                                .HasForeignKey("FielderId");

                                            b3.WithOwner()
                                                .HasForeignKey("MatchStatHistoryPlayerId", "MatchStatId");

                                            b3.OwnsOne("CricketTeams.Domain.Models.Matches.PlayerOutTypes", "PlayerOutType", b4 =>
                                                {
                                                    b4.Property<int>("MatchBatsmanMatchStatHistoryPlayerId")
                                                        .HasColumnType("int");

                                                    b4.Property<int>("MatchBatsmanMatchStatId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<int>("Value")
                                                        .HasColumnType("int");

                                                    b4.HasKey("MatchBatsmanMatchStatHistoryPlayerId", "MatchBatsmanMatchStatId");

                                                    b4.ToTable("MatchStat");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MatchBatsmanMatchStatHistoryPlayerId", "MatchBatsmanMatchStatId");
                                                });

                                            b3.Navigation("Fielder");

                                            b3.Navigation("PlayerOutType");
                                        });

                                    b2.OwnsOne("CricketTeams.Domain.Models.Players.MatchStat.MatchBowler", "Bowler", b3 =>
                                        {
                                            b3.Property<int>("MatchStatHistoryPlayerId")
                                                .HasColumnType("int");

                                            b3.Property<int>("MatchStatId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<int>("Wickets")
                                                .HasColumnType("int");

                                            b3.Property<int>("WideBalls")
                                                .HasColumnType("int");

                                            b3.HasKey("MatchStatHistoryPlayerId", "MatchStatId");

                                            b3.ToTable("MatchStat");

                                            b3.WithOwner()
                                                .HasForeignKey("MatchStatHistoryPlayerId", "MatchStatId");
                                        });

                                    b2.OwnsOne("CricketTeams.Domain.Models.Players.MatchStat.MatchFieldingPosition", "FieldingPosition", b3 =>
                                        {
                                            b3.Property<int>("MatchStatHistoryPlayerId")
                                                .HasColumnType("int");

                                            b3.Property<int>("MatchStatId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.HasKey("MatchStatHistoryPlayerId", "MatchStatId");

                                            b3.ToTable("MatchStat");

                                            b3.WithOwner()
                                                .HasForeignKey("MatchStatHistoryPlayerId", "MatchStatId");

                                            b3.OwnsOne("CricketTeams.Domain.Models.Players.FieldingPosition", "FieldingPosition", b4 =>
                                                {
                                                    b4.Property<int>("MatchFieldingPositionMatchStatHistoryPlayerId")
                                                        .HasColumnType("int");

                                                    b4.Property<int>("MatchFieldingPositionMatchStatId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<string>("Description")
                                                        .IsRequired()
                                                        .HasMaxLength(500)
                                                        .HasColumnType("nvarchar(500)");

                                                    b4.Property<string>("PositionName")
                                                        .IsRequired()
                                                        .HasMaxLength(30)
                                                        .HasColumnType("nvarchar(30)");

                                                    b4.HasKey("MatchFieldingPositionMatchStatHistoryPlayerId", "MatchFieldingPositionMatchStatId");

                                                    b4.ToTable("MatchStat");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MatchFieldingPositionMatchStatHistoryPlayerId", "MatchFieldingPositionMatchStatId");
                                                });

                                            b3.OwnsMany("CricketTeams.Domain.Models.Players.MatchStat.PlayerOut", "PlayersOut", b4 =>
                                                {
                                                    b4.Property<int>("MatchFieldingPositionMatchStatHistoryPlayerId")
                                                        .HasColumnType("int");

                                                    b4.Property<int>("MatchFieldingPositionMatchStatId")
                                                        .HasColumnType("int");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<int>("DismissedPlayerId")
                                                        .HasColumnType("int");

                                                    b4.HasKey("MatchFieldingPositionMatchStatHistoryPlayerId", "MatchFieldingPositionMatchStatId", "Id");

                                                    b4.HasIndex("DismissedPlayerId")
                                                        .IsUnique();

                                                    b4.ToTable("PlayerOut");

                                                    b4.HasOne("CricketTeams.Domain.Models.Players.Player", "DismissedPlayer")
                                                        .WithOne()
                                                        .HasForeignKey("CricketTeams.Domain.Models.Players.MatchStat.PlayerOut", "DismissedPlayerId")
                                                        .OnDelete(DeleteBehavior.Restrict)
                                                        .IsRequired();

                                                    b4.WithOwner()
                                                        .HasForeignKey("MatchFieldingPositionMatchStatHistoryPlayerId", "MatchFieldingPositionMatchStatId");

                                                    b4.OwnsOne("CricketTeams.Domain.Models.Matches.PlayerOutTypes", "PlayerOutType", b5 =>
                                                        {
                                                            b5.Property<int>("PlayerOutMatchFieldingPositionMatchStatHistoryPlayerId")
                                                                .HasColumnType("int");

                                                            b5.Property<int>("PlayerOutMatchFieldingPositionMatchStatId")
                                                                .HasColumnType("int");

                                                            b5.Property<int>("PlayerOutId")
                                                                .ValueGeneratedOnAdd()
                                                                .HasColumnType("int")
                                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                            b5.Property<int>("Value")
                                                                .HasColumnType("int");

                                                            b5.HasKey("PlayerOutMatchFieldingPositionMatchStatHistoryPlayerId", "PlayerOutMatchFieldingPositionMatchStatId", "PlayerOutId");

                                                            b5.ToTable("PlayerOut");

                                                            b5.WithOwner()
                                                                .HasForeignKey("PlayerOutMatchFieldingPositionMatchStatHistoryPlayerId", "PlayerOutMatchFieldingPositionMatchStatId", "PlayerOutId");
                                                        });

                                                    b4.Navigation("DismissedPlayer");

                                                    b4.Navigation("PlayerOutType")
                                                        .IsRequired();
                                                });

                                            b3.Navigation("FieldingPosition")
                                                .IsRequired();

                                            b3.Navigation("PlayersOut");
                                        });

                                    b2.Navigation("Batsman");

                                    b2.Navigation("Bowler");

                                    b2.Navigation("FieldingPosition");
                                });

                            b1.Navigation("Matches");
                        });

                    b.OwnsOne("CricketTeams.Domain.Models.Players.BattingStyle", "BattingStyle", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");
                        });

                    b.OwnsOne("CricketTeams.Domain.Models.Players.BowlingStyle", "BowlingStyle", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.Property<string>("StyleName")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");

                            b1.OwnsOne("CricketTeams.Domain.Models.Players.BowlingTypes", "BowlingType", b2 =>
                                {
                                    b2.Property<int>("BowlingStylePlayerId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<int>("Value")
                                        .HasColumnType("int");

                                    b2.HasKey("BowlingStylePlayerId");

                                    b2.ToTable("Players");

                                    b2.WithOwner()
                                        .HasForeignKey("BowlingStylePlayerId");
                                });

                            b1.Navigation("BowlingType")
                                .IsRequired();
                        });

                    b.OwnsOne("CricketTeams.Domain.Models.Players.FieldingPosition", "FieldingPosition", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.Property<string>("PositionName")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("nvarchar(30)");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");
                        });

                    b.Navigation("BattingStyle");

                    b.Navigation("BowlingStyle");

                    b.Navigation("FieldingPosition");

                    b.Navigation("History")
                        .IsRequired();
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Ball", b =>
                {
                    b.HasOne("CricketTeams.Domain.Models.Players.Player", "Bowler")
                        .WithMany()
                        .HasForeignKey("BowlerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CricketTeams.Domain.Models.Players.Player", "BowlingTeamPlayer")
                        .WithMany()
                        .HasForeignKey("BowlingTeamPlayerId");

                    b.HasOne("CricketTeams.Domain.Models.Players.Player", "DismissedBatsman")
                        .WithMany()
                        .HasForeignKey("DismissedBatsmanId");

                    b.HasOne("CricketTeams.Domain.Models.Players.Player", "NonStriker")
                        .WithMany()
                        .HasForeignKey("NonStrikerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CricketTeams.Domain.Models.Scores.Over", null)
                        .WithMany("Balls")
                        .HasForeignKey("OverId");

                    b.HasOne("CricketTeams.Domain.Models.Players.Player", "Striker")
                        .WithMany()
                        .HasForeignKey("StrikerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("CricketTeams.Domain.Models.Matches.PlayerOutTypes", "OutType", b1 =>
                        {
                            b1.Property<int>("BallId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("BallId");

                            b1.ToTable("Ball");

                            b1.WithOwner()
                                .HasForeignKey("BallId");
                        });

                    b.Navigation("Bowler");

                    b.Navigation("BowlingTeamPlayer");

                    b.Navigation("DismissedBatsman");

                    b.Navigation("NonStriker");

                    b.Navigation("OutType");

                    b.Navigation("Striker");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Inning", b =>
                {
                    b.HasOne("CricketTeams.Domain.Models.Teams.Team", "BattingTeam")
                        .WithMany()
                        .HasForeignKey("BattingTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CricketTeams.Domain.Models.Teams.Team", "BowlingTeam")
                        .WithMany()
                        .HasForeignKey("BowlingTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CricketTeams.Domain.Models.Scores.Score", null)
                        .WithMany("Innings")
                        .HasForeignKey("ScoreId");

                    b.Navigation("BattingTeam");

                    b.Navigation("BowlingTeam");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Over", b =>
                {
                    b.HasOne("CricketTeams.Domain.Models.Players.Player", "Bowler")
                        .WithMany()
                        .HasForeignKey("BowlerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CricketTeams.Domain.Models.Scores.Inning", null)
                        .WithMany("Overs")
                        .HasForeignKey("InningId");

                    b.HasOne("CricketTeams.Domain.Models.Players.Player", "NonStriker")
                        .WithMany()
                        .HasForeignKey("NonStrikerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CricketTeams.Domain.Models.Players.Player", "Striker")
                        .WithMany()
                        .HasForeignKey("StrikerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bowler");

                    b.Navigation("NonStriker");

                    b.Navigation("Striker");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Score", b =>
                {
                    b.HasOne("CricketTeams.Domain.Models.Teams.Team", "TeamA")
                        .WithMany()
                        .HasForeignKey("TeamAId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CricketTeams.Domain.Models.Teams.Team", "TeamB")
                        .WithMany()
                        .HasForeignKey("TeamBId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("CricketTeams.Domain.Models.Matches.TossDecisions", "TossDecision", b1 =>
                        {
                            b1.Property<int>("ScoreId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Value")
                                .HasColumnType("int");

                            b1.HasKey("ScoreId");

                            b1.ToTable("ScoresFromMatches");

                            b1.WithOwner()
                                .HasForeignKey("ScoreId");
                        });

                    b.Navigation("TeamA");

                    b.Navigation("TeamB");

                    b.Navigation("TossDecision")
                        .IsRequired();
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Teams.Team", b =>
                {
                    b.HasOne("CricketTeams.Domain.Models.Coaches.Coach", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId");

                    b.HasOne("CricketTeams.Domain.Models.Teams.TeamPlayers", "Players")
                        .WithMany()
                        .HasForeignKey("PlayersId");

                    b.HasOne("CricketTeams.Domain.Models.Stadiums.Stadium", "Stadium")
                        .WithMany()
                        .HasForeignKey("StadiumId");

                    b.OwnsMany("CricketTeams.Domain.Models.Teams.Sponsor", "Sponsors", b1 =>
                        {
                            b1.Property<int>("FK_Sponsor_Owned")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("WebsiteUrl")
                                .IsRequired()
                                .HasMaxLength(2048)
                                .HasColumnType("nvarchar(2048)");

                            b1.HasKey("FK_Sponsor_Owned", "Id");

                            b1.ToTable("Sponsor");

                            b1.WithOwner()
                                .HasForeignKey("FK_Sponsor_Owned");

                            b1.OwnsOne("CricketTeams.Domain.Models.Teams.SponsorTypes", "SponsorType", b2 =>
                                {
                                    b2.Property<int>("SponsorFK_Sponsor_Owned")
                                        .HasColumnType("int");

                                    b2.Property<int>("SponsorId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<int>("Value")
                                        .HasColumnType("int");

                                    b2.HasKey("SponsorFK_Sponsor_Owned", "SponsorId");

                                    b2.ToTable("Sponsor");

                                    b2.WithOwner()
                                        .HasForeignKey("SponsorFK_Sponsor_Owned", "SponsorId");
                                });

                            b1.Navigation("SponsorType")
                                .IsRequired();
                        });

                    b.OwnsOne("CricketTeams.Domain.Models.Teams.History", "History", b1 =>
                        {
                            b1.Property<int>("TeamId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<int>("TotalLoses")
                                .HasColumnType("int");

                            b1.Property<int>("TotalWins")
                                .HasColumnType("int");

                            b1.HasKey("TeamId");

                            b1.ToTable("Teams");

                            b1.WithOwner()
                                .HasForeignKey("TeamId");
                        });

                    b.Navigation("Coach");

                    b.Navigation("History");

                    b.Navigation("Players");

                    b.Navigation("Sponsors");

                    b.Navigation("Stadium");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Teams.TeamPlayers", b =>
                {
                    b.HasOne("CricketTeams.Domain.Models.Players.Player", "Twelfth")
                        .WithMany()
                        .HasForeignKey("TwelfthId");

                    b.Navigation("Twelfth");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Inning", b =>
                {
                    b.Navigation("BatsmenOut");

                    b.Navigation("Overs");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Over", b =>
                {
                    b.Navigation("Balls");

                    b.Navigation("BatsmenOut");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Scores.Score", b =>
                {
                    b.Navigation("Innings");
                });

            modelBuilder.Entity("CricketTeams.Domain.Models.Teams.TeamPlayers", b =>
                {
                    b.Navigation("AllRounders");

                    b.Navigation("Batsmen");

                    b.Navigation("Bowlers");

                    b.Navigation("Captain")
                        .IsRequired();

                    b.Navigation("WicketKeeper")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
